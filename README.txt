Que es el chmaquina?

Primero que todo el chmaquina es un simulación de un sistema operativo arcaico, en el cual lo que se debe tener en cuento son 2 aspectos importantes como lo son la administración de la memoria del sistema, y la ejecución y administración de programas.

1. Administración de memoria.

La administración de memoria consiste en realiza un vector de 99999 espacios , el cual se tiene que mostrar su funcionamiento en pantalla, aspectos como que contiene en el momento y que se está cargando(Por motivos de facilidad se mostrara en pantalla las primeras 100 posiciones del vector), además se requiere simular el sistema operativo en la memoria, el cual requiere de un espacio en ella, por ende se reservara la cantidad de 10*z+9 posiciones, en donde Z es el último digito de nuestra cedula y el cual se alojara en las primeros espacios de memoria.

2. Ejecución y administración de programas.

La ejecución y administración de programas es la manera como representamos la acción que hace el sistema para mostrarnos los programas como cotidianamente los conoces, en el cual realizamos un programa en X lenguaje de programación y el “automagicamente” realiza todas las operaciones para transformarlo como una aplicación ejecutada y listo para utilizar.

Como nuestro sistema operativo es un poco arcaico y no contiene la misma cantidad de herramientas y opciones que los convencionales, solo aceptara un lenguaje de programación, el cual es llamado chCodigo y corresponde un lenguaje de programación muy sencillo y similar a el assembler, del cual hablaremos más adelante.

El proceso de ejecución y administración de programas se partirá en varios sub- procesos con los cuales entenderemos un poco más como se realizar dicho proceso y los cuales son verificación sintaxis de los .ch (los .ch son los archivos que alojan el chCodigo), cargar los .ch a la memoria e interpretación y ejecución del chCodigo

2.1 Verificación sintaxis de los .ch

Como en todo lenguaje de programación, a la hora de programar, existen infinidad de errores humanos, los cuales pueden ser desde una no declaración de variable hasta un ciclo mal estandarizado, por ende se requiere que todos estos errores de mecanográfica de los cuales ninguno de nosotros estamos exceptos sean corregidos y más uno que también se el verifica cada una de las líneas de código para asegurar que se utilice de manera correcta las palabras reservadas y se declare de manera óptima cada una de las variable.

 2.2 cargar los .ch a la memoria.

Ya que se ha realizado toda la verificación de sintaxis, se procederá a cargar cada una de las líneas de código a la memoria, las cuales serán cargadas en líneas continuas empezando en los espacios libres después de los reservados para el sistema operativo.

2.3 Interpretación y ejecución del chCodigo.

A la hora de realizar la interpretación y ejecución se debe estar seguro que se ha verificado la sintaxis del chCodigo y se ha cargado todo el chCodigo a memoria, por ende cada uno de estos procesos debe ser secuencial y directamente condicionados.

La interpretación se refiere al manejo de cada una de las líneas en chCodigo y traducirlas a un lenguaje conocido, de esta manera se simulara el proceso normal que lleva a cabo cada uno de los programas de nuestro sistema operativo a la hora de llevarlo a lenguaje máquina.

La ejecución del programa es bastante sencilla si se han seguido todos los pasos anteriores ya que se puede asegurar que todo lo que se corre por nuestro chMaquina está debidamente estandarizado y si podrá realizar todas las laboras para lo que ha sido realizado nuestros chProgramas.